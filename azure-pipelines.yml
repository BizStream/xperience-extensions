name: $(Date:yyyy-MM-dd)$(Rev:_r)

pool:
  vmImage: "windows-latest"

pr:
  branches:
    include:
      - develop
      - feature/*

trigger:
  branches:
    include:
      - main
      - develop

steps:
  - task: DotNetCoreCLI@2
    displayName: restore dependencies
    inputs:
      command: "restore"
      projects: "src/**/*.csproj"
      feedsToUse: "select"
      vstsFeed: "4053202a-1650-47d7-804a-73158b8e55f7"

  - task: DotNetCoreCLI@2
    displayName: build projects
    inputs:
      projects: src/**/*.csproj
      arguments: --no-restore

  - task: PowerShell@2
    displayName: "ensure test db file permissions"
    inputs:
      targetType: "inline"
      script: |
        $path = "${env:BUILD_SOURCESDIRECTORY}\TestDatabases"
        if( -Not ( Test-Path -Path $path ) ) {
          $d = [System.IO.Directory]::CreateDirectory( $path )
        }

        $ar = New-Object System.Security.AccessControl.FileSystemAccessRule( "Everyone", "FullControl", "ContainerInherit, ObjectInherit", "None", "Allow" )

        $acl = Get-Acl $path
        $acl.AddAccessRule($ar)

        Set-Acl $path -AclObject $acl
      failOnStderr: true
      showWarnings: true

  - task: DotNetCoreCLI@2
    displayName: test net5.0
    inputs:
      command: test
      projects: src/**/test/**/BizStream.*.Tests.csproj
      arguments: -f net5.0 --collect:"XPlat Code coverage" --no-build
      testRunTitle: net5.0

  - task: DotNetCoreCLI@2
    displayName: test netcoreapp3.1
    inputs:
      command: test
      projects: src/**/test/**/BizStream.*.Tests.csproj
      arguments: -f netcoreapp3.1 --collect:"XPlat Code coverage" --no-build
      testRunTitle: netcoreapp3.1

  # - task: DotNetCoreCLI@2
  #   displayName: test net48
  #   inputs:
  #     command: test
  #     projects: src/**/test/**/BizStream.*.Tests.csproj
  #     arguments: -f net48 --collect:"XPlat Code coverage" --no-build
  #     testRunTitle: net48

  - task: reportgenerator@4
    displayName: generate code coverage
    inputs:
      reports: $(Agent.TempDirectory)/**/coverage.cobertura.xml
      targetdir: $(Agent.TempDirectory)/CoverageResults

  - task: PublishCodeCoverageResults@1
    displayName: publish code coverage
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Agent.TempDirectory)/CoverageResults/Cobertura.xml
      failIfCoverageEmpty: true

  - task: DotNetCoreCLI@2
    displayName: create packages
    inputs:
      command: pack
      packagesToPack: src/**/*.csproj;!src/**/*.Tests.csproj
      nobuild: true
      includesymbols: false

  - task: PublishBuildArtifacts@1
    displayName: publish artifact
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: xperience-extensions
    condition: succeededOrFailed()
